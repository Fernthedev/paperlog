name: Publish QPM Package

env:
  module_id: paperlog
  qmodName: paperlog
  cache-name: paperlog_cache
  CARGO_TERM_COLOR: always

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        targetOS: [ubuntu-latest, windows-latest, macOS-latest, aarch64-linux-android]
        include:
          - targetOS: ubuntu-latest
            os: ubuntu-latest
            cargo-arg: ""
            file-name: "libsong_data_core_rust.so"
            finalPrefix: ubuntu-latest
            lib-name: ""
            build-folder: "./target/release/"
            
          - targetOS: macOS-latest
            os: macOS-latest
            cargo-arg: ""
            file-name: "libsong_data_core_rust.dylib"
            finalPrefix: macOS-latest
            lib-name: ""
            build-folder: "./target/release/"
            
          - targetOS: windows-latest
            os: windows-latest
            cargo-arg: ""
            file-name: "song_data_core_rust.dll"
            lib-name: "song_data_core_rust.dll.lib"
            finalPrefix: windows-latest
            build-folder: "./target/release/"
            
          - targetOS:  aarch64-linux-android
            os: ubuntu-latest
            cargo-arg: "ndk -t arm64-v8a -o target/release"
            file-name: "libsong_data_core_rust.so"
            finalPrefix: "libandroid"
            lib-name: ""
            build-folder: "./target/release/arm64-v8a"

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: Get Tag Version
        id: get_tag_version
        run: |
          echo ${GITHUB_REF#refs/tags/}
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: QPM Rust Action
        uses: Fernthedev/qpm-action@main
        with:
          #required
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true # will run restore on download
          cache: true #will cache dependencies

          publish: true
          publish_token: ${{secrets.QPM_TOKEN}}

          version: ${{ steps.get_tag_version.outputs.VERSION }}
          tag: ${{ steps.get_tag_version.outputs.TAG }}

          # set to true if applicable, ASSUMES the file is already a release asset
          qpm_release_bin: true
          qpm_debug_bin: true

          # Name of qmod in release asset. Assumes exists, same as prior
          qpm_qmod: ${{env.qmodName}}.qmod

      - name: QPM Collapse
        run: |
          qpm collapse
      - name: QPM Setup Scotland2 bootstrapper
        run: |
          cd src_bootstrapper/scotland2
          qpm restore

      - name: Build paperlog
        run: |
          cd ${GITHUB_WORKSPACE}
          qpm s build
          qpm qmod build
          cd src_bootstrapper/scotland2
          # qpm qmod build

      - name: Make qmod paperlog
        run: |
          qpm s qmod ${{env.qmodName}}

      - name: Get Library Name
        id: libname
        run: |
          cd ./build/
          pattern="lib${module_id}*.so"
          files=( $pattern )
          echo ::set-output name=NAME::"${files[0]}"

      - name: Rename debug
        continue-on-error: true
        run: |
          mv ./build/debug/${{ steps.libname.outputs.NAME }} ./build/debug/debug_${{ steps.libname.outputs.NAME }}


      - name: Upload to Release
        id: upload_file_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./build/${{ steps.libname.outputs.NAME }}
            ./build/debug/debug_${{ steps.libname.outputs.NAME }}
            ./${{ env.qmodName }}.qmod
            ./paperlog_sl2.qmod
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}