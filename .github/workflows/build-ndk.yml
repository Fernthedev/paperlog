name: NDK build

env:
  qmodName: paper2_scotland2
  CARGO_TERM_COLOR: always

on:
  push:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Create Cargo LockFile
        run: cargo update

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  build_android:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Create Cargo LockFile
        run: cargo update

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo ndk
        run: |
          cargo install cargo-ndk
          rustup target add aarch64-linux-android

  
      - name: Build
        run: |
          cd scotland2  
          cargo ndk -o build -t arm64-v8a build --verbose


      # - name: Run tests
      #   run: cargo test --verbose

      - name: QPM Rust Action
        uses: Fernthedev/qpm-action@v1
        with:
          # package_path: './scotland2'
          #required
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true # will run restore on download
          cache: true #will cache dependencies

          # Name of qmod in release asset. Assumes exists, same as prior
          qpm_qmod: ${{env.qmodName}}.qmod

      - name: Make qmod paperlog
        run: |
          cd ./scotland2
          qpm qmod zip

      - name: Upload Scotland2 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.qmodName}}.qmod
          path: scotland2/${{env.qmodName}}.qmod
          if-no-files-found: error